- name: Ensure docker is installed
  tags: deploy
  apt: name=docker.io state=present
- name: Ensure pip is installed
  tags: deploy
  apt: name=python-pip state=present
- name: Ensure emacs is installed
  tags: deploy
  apt: name=emacs state=present
- name: Install docker py
  tags: deploy
  pip:
    name: docker-py
  # We use UFW to ensure that control control incoming connections
  # limiting them to SSH and (NGINX)
- name: Ensure UFW is installed
  tags: deploy
  apt: name=ufw state=present
- name: Setup SSH firewall
  tags: deploy
  ufw:
    rule: allow
    name: OpenSSH
- name: Enable UFW
  tags: deploy
  ufw:
    state: enabled
- name: Install jenkins-job-builder
  tags: deploy
  pip:
    name: jenkins-job-builder
- name: Pull jenkins docker image
  tags: deploy
  docker_image:
    name: jenkins/jenkins:lts
- name: Create Jenkins container
  tags: deploy
  # we set network_mode to host so that the container's localhost
  # may point to the host
  # allowing it to listen incoming connections from it's host
  docker_container:
    name: romey-jenkins
    image: jenkins/jenkins:lts
    # user: admin
    volumes:
      - jenkins_home:/var/jenkins_home
      - "{{ admin_dir }}:/home/admin"
    network_mode: "host"
    restart: yes
    env:
      JENKINS_OPTS: --httpListenAddress=127.0.0.1
- name: Wait for Jenkins to be running
  tags: deploy
  wait_for:
    port: 8080
    delay: 10
- name: Get Initial Admin Password
  tags: deploy
  shell: docker exec romey-jenkins bin/cat /var/jenkins_home/secrets/initialAdminPassword
  register: initialpass
- name: Print Password
  tags: deploy
  debug: msg={{ initialpass.stdout }}
- name: create jenkins-job dir
  tags: configure
  file:
    path: "{{ jenkins_jobs_dir }}"
    state: directory
- name: copy rendered jenkins-job config
  tags: configure
  template:
    src: jenkins_jobs.ini.j2
    dest: "{{ jenkins_jobs_conf }}"
- name: put test script
  tags: configure
  shell: echo "echo Test" > {{ admin_dir }}/test.sh
- name: adjust test script perms
  tags: configure
  file:
    owner: admin
    group: users
    mode: 0755
    path: "{{ admin_dir }}/test.sh"
- name: copy jenkins job to jenkins job dir
  tags: configure
  copy:
    dest: "{{ jenkins_jobs_dir }}"
    src: jobs/
- name: Ensure the latest version of PBR is installed
  tags: configure
  pip:
    name: pbr
    extra_args: --upgrade
  environment:
    LC_ALL: C
- name: run jobs builder
  tags: configure
  shell: jenkins-jobs --conf "{{ jenkins_jobs_conf }}" update "{{ jenkins_jobs_dir }}"
  # TODO: Do not assume that letsencrypt was used / exists
  # TODO: Do not assume that NGIX is present
- name: Setup NGINX firewall
  tags: nginx
  ufw:
    rule: allow
    name: Nginx Full
- name: render NGINX config
  tags: nginx
  template:
    src: jenkins.romeyinc.net
    dest: "{{ nginx_sites_available_dir }}/jenkins.romeyinc.net"
- name: enable jenkins.romeyinc.net
  tags: nginx
  file:
    src: "{{ nginx_sites_available_dir }}/jenkins.romeyinc.net"
    dest: "{{ nginx_sites_enabled_dir }}/jenkins.romeyinc.net"
    state: link
- name: restart NGINX
  tags: nginx
  service:
    name: nginx
    state: restarted
